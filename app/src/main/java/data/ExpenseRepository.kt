package com.example.moneymind.data

import androidx.lifecycle.LiveData

class ExpenseRepository(private val expenseDao: ExpenseDao) {

    // üîπ –í—Å–µ –∑–∞–ø–∏—Å–∏ (–¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã)
    val allExpenses: LiveData<List<Expense>> = expenseDao.getAllExpenses()

    // üîπ –¢–æ–ª—å–∫–æ —Ä–∞—Å—Ö–æ–¥—ã
    val allExpensesOnly: LiveData<List<Expense>> = expenseDao.getAllExpensesOnly()

    // üîπ –¢–æ–ª—å–∫–æ –¥–æ—Ö–æ–¥—ã
    val allIncomes: LiveData<List<Expense>> = expenseDao.getAllIncomes()
    fun getAllFromDate(fromDate: Long): LiveData<List<Expense>> {
        return expenseDao.getAllTransactionsFromDate(fromDate)
    }


    // üîΩ –í—Å–µ —Ç–∏–ø—ã (–¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã) –ø–æ –¥–∞—Ç–µ
    fun getExpensesFromDate(fromDate: Long): LiveData<List<Expense>> {
        return expenseDao.getExpensesFromDate(fromDate)
    }

    // üîΩ –¢–æ–ª—å–∫–æ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –¥–∞—Ç–µ
    fun getExpensesFromDateOnly(fromDate: Long): LiveData<List<Expense>> {
        return expenseDao.getExpensesFromDateOnly(fromDate)
    }

    // üîΩ –¢–æ–ª—å–∫–æ –¥–æ—Ö–æ–¥—ã –ø–æ –¥–∞—Ç–µ
    fun getIncomesFromDate(fromDate: Long): LiveData<List<Expense>> {
        return expenseDao.getIncomesFromDate(fromDate)
    }

    // üîΩ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî –≤—Å–µ
    fun getCategoryTotals(): LiveData<List<CategoryTotal>> {
        return expenseDao.getCategoryTotals()
    }

    // üîΩ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Ö–æ–¥—ã
    fun getCategoryTotalsOnly(): LiveData<List<CategoryTotal>> {
        return expenseDao.getCategoryTotalsOnly()
    }

    // üîΩ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –¥–∞—Ç–µ
    fun getCategoryTotalsFromDateOnly(fromDate: Long): LiveData<List<CategoryTotal>> {
        return expenseDao.getCategoryTotalsFromDateOnly(fromDate)
    }

    // üîç –û–¥–∏–Ω –ø–æ ID
    fun getExpenseById(id: Int): LiveData<Expense> {
        return expenseDao.getById(id)
    }

    // üîç –í—Å–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    fun getExpensesByCategory(category: String): LiveData<List<Expense>> {
        return expenseDao.getExpensesByCategory(category)
    }

    // üíæ –î–æ–±–∞–≤–∏—Ç—å
    suspend fun insert(expense: Expense) {
        expenseDao.insert(expense)
    }

    // ‚ôªÔ∏è –û–±–Ω–æ–≤–∏—Ç—å
    suspend fun update(expense: Expense) {
        expenseDao.update(expense)
    }

    // ‚ùå –£–¥–∞–ª–∏—Ç—å
    suspend fun delete(expense: Expense) {
        expenseDao.delete(expense)
    }
}