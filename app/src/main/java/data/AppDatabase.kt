package com.example.moneymind.data

import android.content.Context
import androidx.room.Database
import androidx.room.Room
import androidx.room.RoomDatabase
import com.example.moneymind.data.Category
import com.example.moneymind.data.Expense
import com.example.moneymind.model.CustomCategoryEntity

@Database(
    entities = [Expense::class, Category::class, CustomCategoryEntity::class], // üëà –¥–æ–±–∞–≤–∏–ª–∏ CustomCategoryEntity
    version = 3, // üëà —É–≤–µ–ª–∏—á–∏–ª–∏ –≤–µ—Ä—Å–∏—é –ë–î –¥–æ 3
    exportSchema = false
)
abstract class AppDatabase : RoomDatabase() {

    abstract fun expenseDao(): ExpenseDao
    abstract fun categoryDao(): CategoryDao
    abstract fun customCategoryDao(): CustomCategoryDao // üëà –¥–æ–±–∞–≤–∏–ª–∏ DAO

    companion object {
        @Volatile
        private var INSTANCE: AppDatabase? = null

        fun getDatabase(context: Context): AppDatabase {
            return INSTANCE ?: synchronized(this) {
                val instance = Room.databaseBuilder(
                    context.applicationContext,
                    AppDatabase::class.java,
                    "expense_database"
                )
                    .fallbackToDestructiveMigration() // üëà —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ë–î –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã
                    .build()
                INSTANCE = instance
                instance
            }
        }
    }
}